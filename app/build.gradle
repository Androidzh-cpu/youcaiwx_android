apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    //rxjava冲突：在app build.gradle下添加
    /*packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }*/
    defaultConfig {
        applicationId "com.ucfo.youcaiwx"//配置包名，没配置的话，默认使用 AndroidManifest.xml 文件中指定的包名。

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true  // this line will solve this problem
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
        //TODO x5内核暂时不提供64位的so文件,在64位手机上需要让AP以32位模式运行
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
        sourceSets {
            main {
                jniLibs.srcDir "src/main/libs"
            }
        }
    }

    //TODO 当我们使用Gradle构建时，可以通过lintoptions配置选项，并定义是否需要停止编译，强制让开发者处理较为严重的问题
    lintOptions {
        // true--错误发生后停止gradle构建
        abortOnError false
        // true--关闭lint报告的分析进度
        quiet true
        // true--只报告error
        ignoreWarnings true
        // true--检查所有问题点，包含其他默认关闭项
        checkAllWarnings true
        // true--所有warning当做error
        warningsAsErrors true
        // 关闭指定问题检查
        disable 'TypographyFractions', 'TypographyQuotes'
        // 打开指定问题检查
        enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'
        // 仅检查指定问题
        check 'NewApi', 'InlinedApi'
        // true--error输出文件不包含源码行号
        noLines true
        // true--显示错误的所有发生位置，不截取
        showAll true
        // 回退lint设置(默认规则)
        lintConfig file("default-lint.xml")
        // true--生成txt格式报告(默认false)
        textReport true
        // 重定向输出；可以是文件或'stdout'
        textOutput 'stdout'
        // true--生成XML格式报告
        xmlReport false
        // 指定xml报告文档(默认lint-results.xml)
        xmlOutput file("lint-report.xml")
        // true--生成HTML报告(带问题解释，源码位置，等)
        htmlReport true
        // html报告可选路径(构建器默认是lint-results.html )
        htmlOutput file("lint-report.html")
        //  true--所有正式版构建执行规则生成崩溃的lint检查，如果有崩溃问题将停止构建
        checkReleaseBuilds true
        // 在发布版本编译时检查(即使不包含lint目标)，指定问题的规则生成崩溃
        fatal 'NewApi', 'InlineApi'
        // 指定问题的规则生成错误
        error 'Wakelock', 'TextViewEdits'
        // 指定问题的规则生成警告
        warning 'ResourceAsColor'
        // 忽略指定问题的规则(同关闭检查)
        ignore 'TypographyQuotes'

    }
    //TODO dx工具（android将jar包转成dex格式二进制jar包工具）,这将应用所有使用dex的task。解决65535的配置
    dexOptions {
        //incremental true  //开启incremental dexing,优化编译效率，这个功能android studio默认是关闭的,incremental这个将在2018年后被弃用
        javaMaxHeapSize "4g"   //增加java堆内存大小
        preDexLibraries = false//关闭预编译
    }

    //TODO 签名配置文件所在位置
    signingConfigs {
        relese {
            try {
                keyAlias 'youcaiRelase'
                keyPassword 'CMAyoucai2020'
                storeFile file('D:/YouCaiFile/优财智业项目/新版App签名/appkey.jks')
                storePassword 'CMAyoucai2020'
            } catch (ex) {
                ex.printStackTrace()
                throw new InvalidUserDataException("秘钥用户名或密码错误${ex.getMessage()}")
            }
        }
        debug {
            try {
                keyAlias 'youcaiRelase'
                keyPassword 'CMAyoucai2020'
                storeFile file('D:/YouCaiFile/优财智业项目/新版App签名/appkey.jks')
                storePassword 'CMAyoucai2020'
            } catch (ex) {
                ex.printStackTrace()
                throw new InvalidUserDataException("秘钥用户名或密码错误${ex.getMessage()}")
            }
        }
    }
    //TODO 不同的构建类型
    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            // 混淆
            minifyEnabled true
            //移除无用的resources文件,假如发生resources$弄他foundexception:resources ID #0X4错误可关闭此功能
            shrinkResources true
            //Zipalign优化
            zipAlignEnabled true
            //debug调试
            debuggable false
            //是否支持JNI调试
            jniDebuggable false
            //签名
            signingConfig signingConfigs.relese
            // 混淆文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //移除无用的resources文件,假如发生resources$弄他foundexception:resources ID #0X4错误可关闭此功能
            shrinkResources true
            //应用程序标识后缀
            //applicationIdSuffix ".beta"//因为7.0文件共享的原因,导致配置单额fileprovide与应用程序后缀无法同步
            // 为版本名添加后缀
            versionNameSuffix ".beta"
            //不开启ZipAlign优化
            zipAlignEnabled true
            //是否支持调试
            debuggable true
            //是否支持JNI调试
            jniDebuggable true
            //是否进行混淆
            minifyEnabled true
            signingConfig signingConfigs.relese
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //TODO Java8支持  指定JDK的编译版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //TODO 批量修改生成的 apk 文件名
    applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.buildType.name == 'release') {
                variant.mergedFlavor.versionCode = rootProject.ext.versionCode
                variant.mergedFlavor.versionName = rootProject.ext.versionName
                // release：输出文件名必须命名为 outputFileName
                outputFileName = "com.ucfo.youcai.${buildType.name}.${variant.versionName}.apk"
            } else {
                variant.mergedFlavor.versionCode = rootProject.ext.versionCode
                variant.mergedFlavor.versionName = rootProject.ext.versionName
                // debug 输出文件名必须命名为 outputFileName
                outputFileName = "${project.getName()}_${buildType.name}.apk"
                outputFileName = "com.ucfo.youcai.${buildType.name}.${variant.versionName}.apk"
            }
        }
    }
    productFlavors {

    }
}

dependencies {
    //约束布局远程库
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    //引入libs 文件下所有的jar文件
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //分包处理
    implementation 'com.android.support:multidex:1.0.2'
    //noinspection GradleCompatible从maven获取的库文件
    implementation "com.android.support:appcompat-v7:$var.supportLibraryVersion"
    implementation "com.android.support:support-v4:$var.supportLibraryVersion"
    implementation "com.android.support:design:$var.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$var.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$var.supportLibraryVersion"
    implementation 'com.androidkun:XTabLayout:1.1.4'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'
    annotationProcessor 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    //App下拉刷新  1.0.5 为 1.0.4 与 1.1.0 的过度版，其中API改动过大
    //1.0.5 （重大bug发现，无法兼容 Android P，不推荐使用）
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-21'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-21'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.3'
    implementation 'com.github.xuexiangjys:XUpdate:1.0.6'
    //日志拦截器 //添加HttpLoggingInterceptor进行调试
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    implementation 'com.qianwen:okhttp-utils:3.8.0'
    //动态权限申请
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation 'com.qw:soulpermission:1.1.8'
    implementation 'com.youth.banner:banner:1.4.10'
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    //okhttp以及socket
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.okhttp3:mockwebserver:3.12.0'
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'cn.bingoogolapple:bga-qrcode-zxing:1.3.6'
    //recyclerview的默认加载布局
    implementation 'io.supercharge:shimmerlayout:2.1.0'
    //Facebook的闪光效果开开源框架
    implementation 'com.facebook.shimmer:shimmer:0.1.0'
    implementation 'com.github.barteksc:android-pdf-viewer:3.1.0-beta.1'
    implementation 'com.aliyun.dpa:oss-android-sdk:+'
    implementation 'com.alivc.conan:AlivcConan:0.9.5'
    implementation 'com.zhihu.android:matisse:0.5.2-beta4'
    implementation 'top.zibin:Luban:1.1.8'
    implementation 'org.litepal.android:java:3.0.0'
    implementation 'com.lzy.widget:imagepicker:0.6.1'
    //微信Android接入指南
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    implementation 'com.umeng.umsdk:common:2.1.0'
    implementation 'com.umeng.umsdk:utdid:1.1.5.3'
    implementation 'com.umeng.umsdk:analytics:8.0.2'
    implementation 'com.umeng.umsdk:push:6.0.1'
    implementation project(':okgo')
    implementation project(':Transferee')
    implementation project(':FlycoRoundView_Lib')
    implementation files('libs/tbs_sdk_thirdapp_v4.3.0.1072_43646_sharewithdownloadwithfile_withoutGame_obfs_20190429_175122.jar')
    implementation(name: 'AlivcPlayer-3.4.9', ext: 'aar')
    implementation(name: 'AlivcReporter-1.2', ext: 'aar')
    implementation(name: 'AliyunVodPlayer-3.4.9', ext: 'aar')
    implementation files('libs/umeng-share-core-6.9.4.jar')
    implementation files('libs/umeng-share-wechat-simplify-6.9.4.jar')
    implementation files('libs/umeng-shareboard-widget-6.9.4.jar')
    implementation files('libs/umeng-sharetool-6.9.4.jar')
}
